import telebot
import requests
import os
import time

# –ó–∞–º—ñ–Ω—ñ—Ç—å 'YOUR_BOT_TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω, —è–∫–∏–π –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –≤—ñ–¥ BotFather
BOT_TOKEN = '8264718582:AAGly9dsfTerEak5GbcfGDA5lRDlOndqSbg'
# URL-–∞–¥—Ä–µ—Å–∞ –≤–∞—à–æ–≥–æ API Google Apps Script
GOOGLE_SHEET_API_URL = 'https://script.google.com/macros/s/AKfycbzt1Hf_6copt-mWjGFzKo78lloDEYAsoDvIIN_IgAPKyyRm348g3O7e9eB5Ouh-gIlEpA/exec'

bot = telebot.TeleBot(BOT_TOKEN)

# Dictionary mapping category names to emojis
category_icons = {
    "–ù–∞–≤—É—à–Ω–∏–∫–∏": "üéß",
    "–ê–∫—É—Å—Ç–∏–∫–∞": "üîä",
    "–ú–∏—à–∞ –∫–æ–º–ø.": "üñ±Ô∏è",
    "–ù–∞–±—ñ—Ä –ø–æ—Å—É–¥—É": "üçΩÔ∏è",
    "–°–∫–æ–≤–æ—Ä–æ–¥–∞": "üç≥",
    "–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞": "‚å®Ô∏è"
    }

pma_icons = {
    "SPUSH": "üî• –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç",
    "Spush": "üî• –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç",
    "spush": "üî• –ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç",
    "SHELF": "‚úÖ –ù–∞ —Å–∫–ª–∞–¥—ñ",
    "Shelf": "‚úÖ –ù–∞ —Å–∫–ª–∞–¥—ñ",
    "shelf": "‚úÖ –ù–∞ —Å–∫–ª–∞–¥—ñ"
}


# --- –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥ /start —ñ /–ø—Ä–∏–≤—ñ—Ç ---
@bot.message_handler(commands=['start', '–ø—Ä–∏–≤—ñ—Ç'])
def send_greeting_and_button(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add('–ê–∫—Å–µ—Å—É–∞—Ä–∏ –¢–û–ü –°–ö–Æ')
    keyboard.add('–ü–ª—ñ–≤–∫–∞ —Ç–∞ —Å–∫–ª–æ')
    greeting_text = (
        f"üëã –í—ñ—Ç–∞—é, {message.from_user.username}, –≤ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–æ–º—É –±–æ—Ç—ñ –º–∞–≥–∞–∑–∏–Ω—É ¬´–ú—ñ—Å—Ç 1¬ª! üëã\n\n"
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ê–∫—Å–µ—Å—É–∞—Ä–∏ –¢–û–ü –°–ö–Æ¬ª, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¢–û–ü –°–ö–Æ –∞–∫—Å–µ—Å—É–∞—Ä—ñ–≤!"
    )
    bot.send_message(message.chat.id, greeting_text, reply_markup=keyboard)

# --- –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ê–∫—Å–µ—Å—É–∞—Ä–∏ –¢–û–ü –°–ö–Æ" ---
@bot.message_handler(func=lambda message: message.text == '–ê–∫—Å–µ—Å—É–∞—Ä–∏ –¢–û–ü –°–ö–Æ')
def handle_top_sku_button(message):
    status_message = bot.send_message(message.chat.id, "–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö...")
    try:
        response = requests.get(GOOGLE_SHEET_API_URL)
        response.raise_for_status()
        
        data = response.json()
        categories = data.get('categories', [])

        if not categories:
            bot.edit_message_text("–ù–∞ –∂–∞–ª—å, –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∑ —Ç–∞–±–ª–∏—Ü—ñ. –ú–æ–∂–ª–∏–≤–æ, —Å–ø–∏—Å–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.", 
                                  chat_id=status_message.chat.id, 
                                  message_id=status_message.message_id)
            return

        inline_keyboard = telebot.types.InlineKeyboardMarkup(row_width=2) # –í–∫–∞–∑—É—î–º–æ, —â–æ –≤ –æ–¥–Ω–æ–º—É —Ä—è–¥—É –º–∞—î –±—É—Ç–∏ 2 –∫–Ω–æ–ø–∫–∏
        buttons = []
        for category in categories:
            button_text = f"{category_icons.get(category, '')} {category}".strip()
            buttons.append(telebot.types.InlineKeyboardButton(text=button_text, callback_data=category))
        
        # inline_keyboard.add(*buttons) # –î–æ–¥–∞—î–º–æ –≤—Å—ñ –∫–Ω–æ–ø–∫–∏ –æ–¥—Ä–∞–∑—É (–Ω–µ –ø—Ä–∞—Ü—é—î –¥–ª—è row_width > 1)
        
        # –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø–æ –¥–≤—ñ –≤ —Ä—è–¥
        for i in range(0, len(buttons), 2):
            if i + 1 < len(buttons):
                inline_keyboard.add(buttons[i], buttons[i+1])
            else:
                inline_keyboard.add(buttons[i]) # –î–æ–¥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—é –∫–Ω–æ–ø–∫—É, —è–∫—â–æ –≤–æ–Ω–∞ –æ–¥–Ω–∞

        bot.edit_message_text("–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∞–∫—Å–µ—Å—É–∞—Ä—ñ–≤:", chat_id=status_message.chat.id, 
                              message_id=status_message.message_id, reply_markup=inline_keyboard)

    except requests.exceptions.RequestException as e:
        bot.edit_message_text(f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ API: {e}", 
                              chat_id=status_message.chat.id, 
                              message_id=status_message.message_id)
    except Exception as e:
        bot.edit_message_text(f"–í–∏–Ω–∏–∫–ª–∞ –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: {e}", 
                              chat_id=status_message.chat.id, 
                              message_id=status_message.message_id)


    except requests.exceptions.RequestException as e:
        bot.edit_message_text(f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –∑ API: {e}", 
                              chat_id=status_message.chat.id, 
                              message_id=status_message.message_id)
    except Exception as e:
        bot.edit_message_text(f"–í–∏–Ω–∏–∫–ª–∞ –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: {e}", 
                              chat_id=status_message.chat.id, 
                              message_id=status_message.message_id)

# --- –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏ ---
@bot.callback_query_handler(func=lambda call: True)
def handle_inline_button_click(call):
    
    bot.answer_callback_query(call.id)
    status_message = bot.send_message(call.message.chat.id, "–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö...")

    try:
        category_name = call.data
        
        response = requests.get(f"{GOOGLE_SHEET_API_URL}?category={category_name}")
        response.raise_for_status()
        
        data = response.json()
        items_data = data.get('data', [])

        if not items_data:
            bot.delete_message(chat_id=status_message.chat.id, message_id=status_message.message_id)
            bot.send_message(call.message.chat.id, f"–ù–∞ –∂–∞–ª—å, —É –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó '{category_name}' –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
            return

        bot.delete_message(chat_id=status_message.chat.id, message_id=status_message.message_id)

        message_text = f"*–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {category_name}*\n\n"
        bot.send_message(call.message.chat.id, message_text, parse_mode='Markdown')
        for item in items_data:
            link = item.get('link')
            sku = item.get('item_name')
            description = item.get('item_content')
            brand = item.get('item_brand')
            rma = item.get('rma')
            rma_text = pma_icons.get(rma, "")

            cleaned_description = description.replace(f"{sku}", "").replace(" :", "").replace(";", "").strip()

            if link:
                message_text = f"SKU: {sku}\n*–†–ú–ê: {rma_text}*\nBRAND: {brand}\nNAME: **[{cleaned_description}]({link})**\n\n"
            else:
                message_text = f"SKU: {sku}\n*–†–ú–ê: {rma_text}*\nBRAND: {brand}\nNAME: **{cleaned_description}**\n\n"

            message_text = bot.send_message(call.message.chat.id, message_text, parse_mode='Markdown')



        # message_text = f"**–ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {category_name}**\n\n"
        
        # for item in items_data:
        #     link = item.get('link')
        #     sku = item.get('item_name')
        #     description = item.get('item_content')
        #     brand = item.get('item_brand')

        #     cleaned_description = description.replace(f"{sku}", "").replace(" :", "").replace(";", "").strip()

        #     if link:
        #         message_text += f"SKU: {sku}\n"
        #         message_text += f"BRAND: {brand}\n"
        #         message_text += f"NAME: **[{cleaned_description}]({link})**\n\n"
        #     else:
        #         message_text += f"SKU: {sku}\n"
        #         message_text += f"BRAND: {brand}\n"
        #         message_text += f"NAME: **{cleaned_description}**\n\n"

        # bot.delete_message(chat_id=status_message.chat.id, message_id=status_message.message_id)
        # bot.send_message(call.message.chat.id, message_text, parse_mode='Markdown')
        bot.delete_message(chat_id=status_message.chat.id, message_id=message_text.message_id)
    
    except requests.exceptions.RequestException as e:
        bot.delete_message(chat_id=status_message.chat.id, message_id=status_message.message_id)
        bot.send_message(call.message.chat.id, f"–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö: {e}")
    except Exception as e:
        bot.delete_message(chat_id=status_message.chat.id, message_id=status_message.message_id)
        bot.send_message(call.message.chat.id, f"–í–∏–Ω–∏–∫–ª–∞ –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞: {e}")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
if __name__ == "__main__":
    while True:
        try:
            print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
            bot.polling(none_stop=True)
        except:
            print("–ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ...")

        time.sleep(5)